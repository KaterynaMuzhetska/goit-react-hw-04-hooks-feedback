{"version":3,"sources":["components/Statistics/Statistics.module.css","components/SectionTitle/SectionTitle.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/SectionTitle/SectionTitle.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","SectionTitle","children","className","styles","section","title","FeedbackOptions","options","onLeaveFeedback","list","Object","keys","map","key","button","onClick","Notification","message","notification","Statistics","good","neutral","bad","total","positivePercentage","statistics","Number","isNaN","App","useState","setGood","setNeutral","setBad","countTotalFeedback","reduce","acc","value","e","target","textContent","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,yBAAyB,WAAa,iC,kBCAjGD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,MAAQ,8B,gBCAlED,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,iBCAhED,EAAOC,QAAU,CAAC,aAAe,qC,2GCYlBC,EAPM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,oBAAIF,UAAWC,IAAOE,MAAtB,mCACCJ,M,gBCeUK,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIN,UAAWC,IAAOM,KAAtB,SACGC,OAAOC,KAAKJ,GAASK,KAAI,SAACC,GAAD,OACxB,wBAAQX,UAAWC,IAAOW,OAAkBC,QAASP,EAArD,SACGK,GADoCA,S,gBCIhCG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGf,UAAWC,IAAOe,aAArB,SAAoCD,K,gBC8BvBE,EA5BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAItB,UAAWC,IAAOE,MAAtB,wBACCkB,EACC,qBAAIrB,UAAWC,IAAOM,KAAtB,UACE,oBAAGP,UAAWC,IAAOsB,WAArB,mBAAwCL,KACxC,oBAAGlB,UAAWC,IAAOsB,WAArB,sBAA2CJ,KAC3C,oBAAGnB,UAAWC,IAAOsB,WAArB,kBAAuCH,KACvC,oBAAGpB,UAAWC,IAAOsB,WAArB,oBAAyCF,KACzC,oBAAGrB,UAAWC,IAAOsB,WAArB,+BACqB,IAClBC,OAAOC,MAAMH,GAAsB,EAAIA,EAF1C,UAMF,cAAC,EAAD,CAAcP,QAAS,0BCkCdW,MAnDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAqBMC,EAAqB,WAEzB,MADc,CAACb,EAAMC,EAASC,GACjBY,QAAO,SAACC,EAAKC,GAAN,OAAiBD,EAAOC,IAAQ,IAOtD,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACE7B,QAAS,CAAEa,OAAMC,UAASC,OAC1Bd,gBAhCkB,SAAC6B,GAGvB,OAFiBA,EAAEC,OAAOC,aAGxB,IAAK,OACHT,GAAQ,SAACU,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHT,GAAW,SAACS,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHR,GAAO,SAACQ,GAAD,OAAeA,EAAY,KAClC,MAEF,QACE,WAoBF,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,mBAfGiB,KAAKC,MAAc,IAAPtB,EAAca,WC5BrCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6638607d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__1Mg1i\",\"list\":\"Statistics_list__2QF_d\",\"statistics\":\"Statistics_statistics__8_27G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SectionTitle_section__2EOtT\",\"title\":\"SectionTitle_title__CFSLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2KYoo\",\"button\":\"FeedbackOptions_button__1y779\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2ry7f\"};","// Модули\r\nimport React from \"react\";\r\n\r\n// Стили\r\nimport styles from \"./SectionTitle.module.css\";\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <div className={styles.section}>\r\n    <h2 className={styles.title}>Please leave feedback</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default SectionTitle;\r\n","// Модули\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Стили\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {Object.keys(options).map((key) => (\r\n        <button className={styles.button} key={key} onClick={onLeaveFeedback}>\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","// Модули\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Стили\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.notification}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","// Модули\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Компоненты\r\nimport Notification from '../Notification';\r\n\r\n// Стили\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <h2 className={styles.title}>Statistics</h2>\r\n    {total ? (\r\n      <ul className={styles.list}>\r\n        <p className={styles.statistics}>Good: {good}</p>\r\n        <p className={styles.statistics}>Neutral: {neutral}</p>\r\n        <p className={styles.statistics}>Bad: {bad}</p>\r\n        <p className={styles.statistics}>Total: {total}</p>\r\n        <p className={styles.statistics}>\r\n          Positive feedback:{' '}\r\n          {Number.isNaN(positivePercentage) ? 0 : positivePercentage}%\r\n        </p>\r\n      </ul>\r\n    ) : (\r\n      <Notification message={'No feedback given'} />\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","// Модули\r\nimport { useState } from \"react\";\r\n\r\n// Компоненты\r\nimport SectionTitle from \"./components/SectionTitle\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions\";\r\nimport Statistics from \"./components/Statistics\";\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const onLeaveFeedback = (e) => {\r\n    const feedback = e.target.textContent;\r\n\r\n    switch (feedback) {\r\n      case \"good\":\r\n        setGood((prevState) => prevState + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral((prevState) => prevState + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad((prevState) => prevState + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const total = [good, neutral, bad];\r\n    return total.reduce((acc, value) => (acc += value), 0);\r\n  };\r\n\r\n  const positivePercentage = () => {\r\n    return Math.round((good * 100) / countTotalFeedback());\r\n  };\r\n\r\n  return (\r\n    <SectionTitle>\r\n      <FeedbackOptions\r\n        options={{ good, neutral, bad }}\r\n        onLeaveFeedback={onLeaveFeedback}\r\n      />\r\n\r\n      <Statistics\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        total={countTotalFeedback()}\r\n        positivePercentage={positivePercentage()}\r\n      />\r\n    </SectionTitle>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// Модули\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Компоненты\r\nimport App from \"./App\";\r\n\r\n// Стили\r\n//  import 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}